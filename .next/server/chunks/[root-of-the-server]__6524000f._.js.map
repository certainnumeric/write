{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 68, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/mdint/Desktop/programing/write/lib/mongodb.js"],"sourcesContent":["import mongoose from \"mongoose\";\r\n\r\nconst connectDB = async () => {\r\n    try{\r\n        await mongoose.connect(process.env.MONGODB_URI)\r\n        console.log(\"MongoDB connected successfully\");\r\n\r\n    }\r\n    catch(err){\r\n        console.error(\"MongoDB connection failed\", err);\r\n        process.exit(1); // Exit the process with failure\r\n    }\r\n}   \r\nexport default connectDB;"],"names":[],"mappings":";;;AAAA;;AAEA,MAAM,YAAY;IACd,IAAG;QACC,MAAM,yGAAA,CAAA,UAAQ,CAAC,OAAO,CAAC,QAAQ,GAAG,CAAC,WAAW;QAC9C,QAAQ,GAAG,CAAC;IAEhB,EACA,OAAM,KAAI;QACN,QAAQ,KAAK,CAAC,6BAA6B;QAC3C,QAAQ,IAAI,CAAC,IAAI,gCAAgC;IACrD;AACJ;uCACe","debugId":null}},
    {"offset": {"line": 89, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/mdint/Desktop/programing/write/models/message.js"],"sourcesContent":["import mongoose, {Schema} from \"mongoose\";\r\n\r\nconst messageSchema = new Schema({\r\n    title: String,\r\n    description: String,\r\n},\r\n{\r\n    timestamps: true,\r\n    versionKey: false\r\n\r\n})\r\nconst message = mongoose.models.message|| mongoose.model(\"Topic\", messageSchema);\r\nexport default message;"],"names":[],"mappings":";;;AAAA;;AAEA,MAAM,gBAAgB,IAAI,yGAAA,CAAA,SAAM,CAAC;IAC7B,OAAO;IACP,aAAa;AACjB,GACA;IACI,YAAY;IACZ,YAAY;AAEhB;AACA,MAAM,UAAU,yGAAA,CAAA,UAAQ,CAAC,MAAM,CAAC,OAAO,IAAG,yGAAA,CAAA,UAAQ,CAAC,KAAK,CAAC,SAAS;uCACnD","debugId":null}},
    {"offset": {"line": 109, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/mdint/Desktop/programing/write/app/api/message/route.js"],"sourcesContent":["import { NextResponse } from \"next/server\";\r\nimport connectDB from \"@/lib/mongodb\";\r\nimport message from \"@/models/message\";\r\n\r\n\r\nexport async function POST(request) {\r\n  const { title, description } = await request.json();\r\n  await connectDB();\r\n  await message.create({ title, description });\r\n  return NextResponse.json({ message: \"Topic Created\" }, { status: 201 });\r\n}\r\n\r\nexport async function GET() {\r\n  await connectDB();\r\n  const message = await message.find();\r\n  return NextResponse.json({ topics });\r\n}\r\n\r\nexport async function DELETE(request) {\r\n  const id = request.nextUrl.searchParams.get(\"id\");\r\n  await connectDB();\r\n  await message.findByIdAndDelete(id);\r\n  return NextResponse.json({ message: \"Topic deleted\" }, { status: 200 });\r\n}\r\n"],"names":[],"mappings":";;;;;AAAA;AACA;AACA;;;;AAGO,eAAe,KAAK,OAAO;IAChC,MAAM,EAAE,KAAK,EAAE,WAAW,EAAE,GAAG,MAAM,QAAQ,IAAI;IACjD,MAAM,CAAA,GAAA,gHAAA,CAAA,UAAS,AAAD;IACd,MAAM,mHAAA,CAAA,UAAO,CAAC,MAAM,CAAC;QAAE;QAAO;IAAY;IAC1C,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;QAAE,SAAS;IAAgB,GAAG;QAAE,QAAQ;IAAI;AACvE;AAEO,eAAe;IACpB,MAAM,CAAA,GAAA,gHAAA,CAAA,UAAS,AAAD;IACd,MAAM,UAAU,MAAM,QAAQ,IAAI;IAClC,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;QAAE;IAAO;AACpC;AAEO,eAAe,OAAO,OAAO;IAClC,MAAM,KAAK,QAAQ,OAAO,CAAC,YAAY,CAAC,GAAG,CAAC;IAC5C,MAAM,CAAA,GAAA,gHAAA,CAAA,UAAS,AAAD;IACd,MAAM,mHAAA,CAAA,UAAO,CAAC,iBAAiB,CAAC;IAChC,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;QAAE,SAAS;IAAgB,GAAG;QAAE,QAAQ;IAAI;AACvE","debugId":null}}]
}