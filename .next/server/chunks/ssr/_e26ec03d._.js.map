{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/mdint/Desktop/programing/write/component/Listname.jsx"],"sourcesContent":["\"use client\"\r\nconst getThoughts = async () => {\r\n    try {\r\n        const res = await fetch(\"http://localhost:3000/api/message\", { caches: \"no-store\", }\r\n        );\r\n        if (!res.ok) {\r\n            throw new Error(\"failed to fetch thought\")\r\n        }\r\n    const data = res.json();\r\n    console.log(data);\r\n    return data;    \r\n\r\n    } catch(error) {\r\n        console.log(\"error loading thoughts:\", error);\r\n    }\r\n}\r\n\r\nexport default async function Listname() {\r\n    let message = [];\r\n    try {\r\n        console.log(\"assigning to data\")\r\n        console.log(message)\r\n        const data = await getThoughts();\r\n        message = Array.isArray(data?.message) ? data.message : [\r\n            {\r\n            title: \"title\",\r\n            description: \"description\"\r\n            }\r\n        ];\r\n    } catch (error) {\r\n        console.log(\"Error fetching messages:\", error);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {message.length === 0 ? (\r\n                <div className=\"text-center text-gray-500 mt-8\">No messages found.</div>\r\n            ) : (\r\n                message.map((m) => (\r\n                    <div key={m._id || m.title} className=\"flex justify-around border-2 border-black mx-[10vw] bg-gray-200 rounded-md \">\r\n                        <div>\r\n                            <h1>{m.title}</h1>\r\n                            <div>{m.description}</div>\r\n                        </div>\r\n                        <div className=\"flex gap-8 \">\r\n                            <button>edit</button>\r\n                            <button>delete</button>\r\n                        </div>\r\n                    </div>\r\n                ))\r\n            )}\r\n        </>\r\n    );\r\n}"],"names":[],"mappings":";;;;AAAA;;AACA,MAAM,cAAc;IAChB,IAAI;QACA,MAAM,MAAM,MAAM,MAAM,qCAAqC;YAAE,QAAQ;QAAY;QAEnF,IAAI,CAAC,IAAI,EAAE,EAAE;YACT,MAAM,IAAI,MAAM;QACpB;QACJ,MAAM,OAAO,IAAI,IAAI;QACrB,QAAQ,GAAG,CAAC;QACZ,OAAO;IAEP,EAAE,OAAM,OAAO;QACX,QAAQ,GAAG,CAAC,2BAA2B;IAC3C;AACJ;AAEe,eAAe;IAC1B,IAAI,UAAU,EAAE;IAChB,IAAI;QACA,QAAQ,GAAG,CAAC;QACZ,QAAQ,GAAG,CAAC;QACZ,MAAM,OAAO,MAAM;QACnB,UAAU,MAAM,OAAO,CAAC,MAAM,WAAW,KAAK,OAAO,GAAG;YACpD;gBACA,OAAO;gBACP,aAAa;YACb;SACH;IACL,EAAE,OAAO,OAAO;QACZ,QAAQ,GAAG,CAAC,4BAA4B;IAC5C;IAEA,qBACI;kBACK,QAAQ,MAAM,KAAK,kBAChB,8OAAC;YAAI,WAAU;sBAAiC;;;;;mBAEhD,QAAQ,GAAG,CAAC,CAAC,kBACT,8OAAC;gBAA2B,WAAU;;kCAClC,8OAAC;;0CACG,8OAAC;0CAAI,EAAE,KAAK;;;;;;0CACZ,8OAAC;0CAAK,EAAE,WAAW;;;;;;;;;;;;kCAEvB,8OAAC;wBAAI,WAAU;;0CACX,8OAAC;0CAAO;;;;;;0CACR,8OAAC;0CAAO;;;;;;;;;;;;;eAPN,EAAE,GAAG,IAAI,EAAE,KAAK;;;;;;AAc9C","debugId":null}},
    {"offset": {"line": 112, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/mdint/Desktop/programing/write/node_modules/next/src/server/route-modules/app-page/vendored/ssr/react-jsx-dev-runtime.ts"],"sourcesContent":["module.exports = require('../../module.compiled').vendored[\n  'react-ssr'\n].ReactJsxDevRuntime\n"],"names":["module","exports","require","vendored","ReactJsxDevRuntime"],"mappings":";AAAAA,OAAOC,OAAO,GAAGC,QAAQ,4HAAyBC,QAAQ,CACxD,YACD,CAACC,kBAAkB","ignoreList":[0],"debugId":null}}]
}