{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 60, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/mdint/Desktop/programing/write/lib/mongodb.js"],"sourcesContent":["import mongoose from \"mongoose\";\r\n\r\nconst connectDB = async () => {\r\n    console.log(\"Connecting to MongoDB...\");\r\n    try{\r\n        await mongoose.connect(process.env.MONGODB_URI)\r\n        console.log(\"MongoDB connected successfully\");\r\n\r\n    }\r\n    catch(err){\r\n        console.error(\"MongoDB connection failed\", err);\r\n        process.exit(1); // Exit the process with failure\r\n    }\r\n}   \r\nexport default connectDB;"],"names":[],"mappings":";;;AAAA;;AAEA,MAAM,YAAY;IACd,QAAQ,GAAG,CAAC;IACZ,IAAG;QACC,MAAM,yGAAA,CAAA,UAAQ,CAAC,OAAO,CAAC,QAAQ,GAAG,CAAC,WAAW;QAC9C,QAAQ,GAAG,CAAC;IAEhB,EACA,OAAM,KAAI;QACN,QAAQ,KAAK,CAAC,6BAA6B;QAC3C,QAAQ,IAAI,CAAC,IAAI,gCAAgC;IACrD;AACJ;uCACe","debugId":null}},
    {"offset": {"line": 82, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/mdint/Desktop/programing/write/models/message.js"],"sourcesContent":["import mongoose, { Schema } from \"mongoose\";\r\n\r\nconst messageSchema = new Schema(\r\n    {\r\n        title: String,\r\n        description: String,\r\n    },\r\n    {\r\n        timestamps: true,\r\n\r\n    })\r\nconst message = mongoose.models.message || mongoose.model(\"message\", messageSchema);\r\nexport default message;"],"names":[],"mappings":";;;AAAA;;AAEA,MAAM,gBAAgB,IAAI,yGAAA,CAAA,SAAM,CAC5B;IACI,OAAO;IACP,aAAa;AACjB,GACA;IACI,YAAY;AAEhB;AACJ,MAAM,UAAU,yGAAA,CAAA,UAAQ,CAAC,MAAM,CAAC,OAAO,IAAI,yGAAA,CAAA,UAAQ,CAAC,KAAK,CAAC,WAAW;uCACtD","debugId":null}},
    {"offset": {"line": 109, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/mdint/Desktop/programing/write/app/api/message/route.js"],"sourcesContent":["import connectDB from \"@/lib/mongodb\";\r\nimport message from \"@/models/message\";\r\nimport { NextResponse } from \"next/server\";\r\n\r\nexport async function POST(request) {\r\n  try {\r\n    const {title, description} = await request.json();\r\n    await connectDB();\r\n    await message.create({title, description});\r\n    return NextResponse.json({message: \"message created\"}, {status: 201});\r\n  } catch (error) {\r\n    console.error(\"Error creating message:\", error);\r\n    return NextResponse.json(\r\n      {error: \"Failed to create message\"}, \r\n      {status: 500}\r\n    );\r\n  }\r\n}\r\n\r\nexport async function GET() {\r\n  try {\r\n    await connectDB();\r\n    const messages = await message.find();\r\n    return NextResponse.json(messages, {status: 200});\r\n  } catch (error) {\r\n    console.error(\"Error fetching messages:\", error);\r\n    return NextResponse.json({error: \"Failed to fetch messages\"}, {status: 500});\r\n  }\r\n}\r\n\r\n// export async function DELETE(request) {\r\n//   try {\r\n//     await connectDB();\r\n//     const {id} = await request.json();\r\n//     await message.findByIdAndDelete(id);\r\n//     return NextResponse.json({message: \"message deleted\"}, {status: 200});\r\n//   } catch (error) {\r\n//     console.error(\"Error deleting message:\", error);\r\n//     return NextResponse.json({error: \"Failed to delete message\"}, {status: 500});\r\n//   }\r\n// }\r\n\r\n\r\nexport async function DELETE(request) {\r\n  const id = request.nextUrl.searchPrams.get(\"id\");\r\n  await connectDB();\r\n  await message.findByIdAndDelete(id);\r\n  return NextResponse.json({ message: \"thought is deleted\"}, {status: 200});\r\n  }"],"names":[],"mappings":";;;;;AAAA;AACA;AACA;;;;AAEO,eAAe,KAAK,OAAO;IAChC,IAAI;QACF,MAAM,EAAC,KAAK,EAAE,WAAW,EAAC,GAAG,MAAM,QAAQ,IAAI;QAC/C,MAAM,CAAA,GAAA,gHAAA,CAAA,UAAS,AAAD;QACd,MAAM,mHAAA,CAAA,UAAO,CAAC,MAAM,CAAC;YAAC;YAAO;QAAW;QACxC,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAC,SAAS;QAAiB,GAAG;YAAC,QAAQ;QAAG;IACrE,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,2BAA2B;QACzC,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CACtB;YAAC,OAAO;QAA0B,GAClC;YAAC,QAAQ;QAAG;IAEhB;AACF;AAEO,eAAe;IACpB,IAAI;QACF,MAAM,CAAA,GAAA,gHAAA,CAAA,UAAS,AAAD;QACd,MAAM,WAAW,MAAM,mHAAA,CAAA,UAAO,CAAC,IAAI;QACnC,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC,UAAU;YAAC,QAAQ;QAAG;IACjD,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,4BAA4B;QAC1C,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAC,OAAO;QAA0B,GAAG;YAAC,QAAQ;QAAG;IAC5E;AACF;AAeO,eAAe,OAAO,OAAO;IAClC,MAAM,KAAK,QAAQ,OAAO,CAAC,WAAW,CAAC,GAAG,CAAC;IAC3C,MAAM,CAAA,GAAA,gHAAA,CAAA,UAAS,AAAD;IACd,MAAM,mHAAA,CAAA,UAAO,CAAC,iBAAiB,CAAC;IAChC,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;QAAE,SAAS;IAAoB,GAAG;QAAC,QAAQ;IAAG;AACvE","debugId":null}}]
}